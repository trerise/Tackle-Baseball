import fs from"fs";import{american,hispanic,chinese,japanese,italian,german,french,easterneuro,korean,vietnamese,indian,arabic,subsaharan,greek,scandinavian}from"./NamesList.js";let regionarr=[american,hispanic,chinese,japanese,italian,german,french,easterneuro,korean,vietnamese,indian,arabic,subsaharan,greek,scandinavian];function nameGenerator(e){let t,a;for(let t=0;t<regionarr.length;t++)if(e==regionarr[t].name){a=regionarr[t];break}let n=Math.random();return t=(a==chinese||a==vietnamese)&&n<=.3?`${a.list[0][Math.floor(Math.random()*a.list[0].length)]} ${a.list[0][Math.floor(Math.random()*a.list[0].length)]} ${a.list[1][Math.floor(Math.random()*a.list[1].length)]}`:`${a.list[0][Math.floor(Math.random()*a.list[0].length)]} ${a.list[1][Math.floor(Math.random()*a.list[1].length)]}`,t}function teamMaker(e,t,a){for(let n=0;n<t;n++){let t=nameGenerator(e);fs.writeFileSync("NewRosters.txt",`let ${nameSani(t)}                                       = {name: "${t}", power: ${statGen(a)}, speed: ${statGen(a)}, eye: ${statGen(a)},  tackle: ${statGen(a)}, breaktackle: ${statGen(a)}, block: ${statGen(a)}, breakblock:  ${statGen(a)}, awareness: ${statGen(a)}, age: ${randStat(20,45)}, potential: "${potGen()}"};\n`,{flag:"a"},(e=>{if(e)throw e})),fs.writeFileSync("RosterList.txt",`${nameSani(t)},\n`,{flag:"a"},(e=>{if(e)throw e}))}}function playerCreator(){for(let e=3;e<tm._LEAGUE_.length;e++)for(let t=0;t<tm._LEAGUE_[e].length;t++)teamMaker(tm._LEAGUE_[e][t].region,6,tm._LEAGUE_[e])}function faGen(){for(let e=0;e<tm.teams.length;e++)for(let t=0;t<4;t++){let t=nameGenerator(tm.teams[e].region.name);fs.writeFileSync(`./src/players/free agents/${tm.teams[e].region.name}/${t}.txt`,`name: ${t}\n  power: ${statGen(!1)}\n  speed: ${speedGen(!1)}\n  eye: ${statGen(!1)}\n  tackle: ${statGen(!1)}\n  breaktackle: ${statGen(!1)}\n  block: ${statGen(!1)}\n  breakblock: ${statGen(!1)}\n  awareness: ${statGen(!1)}\n  age: ${randStat(20,45)}\n  potential: ${potGen(!1)}\n\n\n\nstats:\nSeason 2023:\n  Points Scored: 0\n  Assists: 0\n  Assist Points: 0\n  Broken Tackles: 0\n  Balls Fielded (OFF): 0\n  Blocks: 0\n  Turnovers: 0\n  Pitches: 0\n  Strikes: 0\n  Balls: 0\n  Fouls: 0\n  Strikeouts Pitching: 0\n  Ball Outs: 0\n  Slams Given: 0\n  At-Bats: 0\n  Hits: 0\n  Slams: 0\n  Hits to Out: 0\n  Hits to Offense: 0\n  Foulouts: 0\n  Strikeouts Batting: 0\n  Tackles: 0\n  Blocks Shed: 0\n  Interceptions: 0\n  Balls Fielded (DEF): 0\n  Total Outs Recorded: 0`,{flag:"w"})}}function statGen(e){return 1==e?randStat(70,91):randStat(50,81)}function speedGen(e){return randStat(1==e?80:59,99)}function mistakeMakeUp(){for(let e=0;e<_LEAGUE_.length;e++)for(let t=0;t<_LEAGUE_[e].length;t++)for(let t=0;t<6;t++)fs.writeFileSync("Block.txt",`block: ${statGen(_LEAGUE_[e])}, breakblock:  ${statGen(_LEAGUE_[e])}\n`,{flag:"as"},(e=>e=>{if(e)throw e}))}function randStat(e,t){return Math.floor(Math.random()*(t-e+1)+e)}function potGen(e){let t=["A","B","C","D","F"],a=0;if(1==e)return"Star";{let e=randStat(0,100);return a=e<10?0:e<30?1:e<60?2:e<80?3:4,t[a]}}function playerOverall(e){return Math.round((e.power+e.speed+e.eye+e.block+e.breakblock+e.tackle+e.breaktackle+e.awareness)/8)}let a=0,teamovr=0;function teamPrinter(){for(let e=0;e<tm._LEAGUE_.length;e++)for(let t=0;t<tm._LEAGUE_[e].length;t++){fs.writeFileSync("Final Rosters.txt",`${tm._LEAGUE_[e][t].name.toUpperCase()}\n`,{flag:"a+"},(e=>e=>{if(e)throw e}));for(let e=0;e<6;e++)fs.writeFileSync("Final Rosters.txt",` ${players[a].name} Ovr:${playerOverall(players[a])}\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),fs.writeFileSync("Final Rosters.txt",`         power:${players[a].power}\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),fs.writeFileSync("Final Rosters.txt",`         speed:${players[a].speed}\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),fs.writeFileSync("Final Rosters.txt",`         eye:${players[a].eye}\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),fs.writeFileSync("Final Rosters.txt",`         block:${players[a].block}\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),fs.writeFileSync("Final Rosters.txt",`         breakblock:${players[a].breakblock}\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),fs.writeFileSync("Final Rosters.txt",`         tackle:${players[a].tackle}\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),fs.writeFileSync("Final Rosters.txt",`         breaktackle:${players[a].breaktackle}\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),fs.writeFileSync("Final Rosters.txt",`         awareness:${players[a].awareness}\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),fs.writeFileSync("Final Rosters.txt",`         age:${players[a].age}\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),fs.writeFileSync("Final Rosters.txt",`         potential:${players[a].potential}\n\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),teamovr+=playerOverall(players[a]),a++;teamovr=Math.round(teamovr/6),fs.writeFileSync("Final Rosters.txt",` TEAM OVERALL: ${teamovr}\n\n`,{flag:"a+"},(e=>e=>{if(e)throw e})),teamovr=0}}let p=3876;function rosterFillerPrinter(){for(let e=3;e<tm._LEAGUE_.length;e++)for(let t=0;t<tm._LEAGUE_[e].length;t++){tm._LEAGUE_[e][t].roster=[];for(let a=0;a<6;a++)tm._LEAGUE_[e][t].roster.push(`pl.${nameSani(players[p].name)}`),p++;fs.writeFileSync("New Filled Rosters.txt",`let ${nameSani(tm._LEAGUE_[e][t].name)} = {name: "${tm._LEAGUE_[e][t].name}", region: ${tm._LEAGUE_[e][t].region.name}, roster: [${tm._LEAGUE_[e][t].roster}]};\n`,{flag:"as"},(e=>e=>{if(e)throw e}))}}function nameSani(e){let t=e.replace(/\s/gi,"");return t=t.replace(/\./gi,""),t=t.replace(/\'/gi,""),t=t.replace(/\-/gi,""),t}export{nameGenerator,statGen,randStat,playerOverall,potGen,speedGen};